/****************************************************************************
 *
 *   @copyright Copyright (c) 2024 Dave Hylands     <dhylands@gmail.com>
 *
 *   This program is free software; you can redistribute it and/or modify
 *   it under the terms of the MIT License version as described in the
 *   LICENSE file in the root of this repository.
 *
 ****************************************************************************/
/**
 *   @file   StrPrintfTest.cpp
 *
 *   @brief  Tests for functions in StrPrintf.cpp
 *
 ****************************************************************************/

// ---- Include Files -------------------------------------------------------

#include <stdarg.h>
#include <gtest/gtest.h>

#include <cstddef>
#include <cstdio>
#include <string>
#include <sstream>

#include "duino_log/Str.h"
#include "duino_util/Util.h"

//! Struct with a format string and a type
//! @tparam T The type of the value.
template <typename T>
struct Test {
    const char* fmt;  //!< printf format string to use.
    T val;            //!< Argument to pass to printf function.
};

static Test<int> int_test[] = {
    // clang-format off
    {"%d", 0},
    {"%d", 1},
    {"%d", 12},
    {"%d", 123},
    {"%d", -1},
    {"%d", -12},
    {"%d", -123},
    {"%hhd", 0},
    {"%hhd", 1},
    {"%hhd", 12},
    {"%hhd", 123},
    {"%hhd", -1},
    {"%hhd", -12},
    {"%hhd", -123},
    {"%hd", 0},
    {"%hd", 1},
    {"%hd", 12},
    {"%hd", 123},
    {"%hd", -1},
    {"%hd", -12},
    {"%hd", -123},
    {"%.2d", 0},
    {"%.2d", 1},
    {"%.2d", 12},
    {"%.2d", 123},
    {"%.2d", -1},
    {"%.2d", -12},
    {"%.2d", -123},
    {"%.2hhd", 0},
    {"%.2hhd", 1},
    {"%.2hhd", 12},
    {"%.2hhd", 123},
    {"%.2hhd", -1},
    {"%.2hhd", -12},
    {"%.2hhd", -123},
    {"%.2hd", 0},
    {"%.2hd", 1},
    {"%.2hd", 12},
    {"%.2hd", 123},
    {"%.2hd", -1},
    {"%.2hd", -12},
    {"%.2hd", -123},
    {"%2d", 0},
    {"%2d", 1},
    {"%2d", 12},
    {"%2d", 123},
    {"%2d", -1},
    {"%2d", -12},
    {"%2d", -123},
    {"%2hhd", 0},
    {"%2hhd", 1},
    {"%2hhd", 12},
    {"%2hhd", 123},
    {"%2hhd", -1},
    {"%2hhd", -12},
    {"%2hhd", -123},
    {"%2hd", 0},
    {"%2hd", 1},
    {"%2hd", 12},
    {"%2hd", 123},
    {"%2hd", -1},
    {"%2hd", -12},
    {"%2hd", -123},
    {"%2.2d", 0},
    {"%2.2d", 1},
    {"%2.2d", 12},
    {"%2.2d", 123},
    {"%2.2d", -1},
    {"%2.2d", -12},
    {"%2.2d", -123},
    {"%2.2hhd", 0},
    {"%2.2hhd", 1},
    {"%2.2hhd", 12},
    {"%2.2hhd", 123},
    {"%2.2hhd", -1},
    {"%2.2hhd", -12},
    {"%2.2hhd", -123},
    {"%2.2hd", 0},
    {"%2.2hd", 1},
    {"%2.2hd", 12},
    {"%2.2hd", 123},
    {"%2.2hd", -1},
    {"%2.2hd", -12},
    {"%2.2hd", -123},
    {"%-d", 0},
    {"%-d", 1},
    {"%-d", 12},
    {"%-d", 123},
    {"%-d", -1},
    {"%-d", -12},
    {"%-d", -123},
    {"%-hhd", 0},
    {"%-hhd", 1},
    {"%-hhd", 12},
    {"%-hhd", 123},
    {"%-hhd", -1},
    {"%-hhd", -12},
    {"%-hhd", -123},
    {"%-hd", 0},
    {"%-hd", 1},
    {"%-hd", 12},
    {"%-hd", 123},
    {"%-hd", -1},
    {"%-hd", -12},
    {"%-hd", -123},
    {"%-.2d", 0},
    {"%-.2d", 1},
    {"%-.2d", 12},
    {"%-.2d", 123},
    {"%-.2d", -1},
    {"%-.2d", -12},
    {"%-.2d", -123},
    {"%-.2hhd", 0},
    {"%-.2hhd", 1},
    {"%-.2hhd", 12},
    {"%-.2hhd", 123},
    {"%-.2hhd", -1},
    {"%-.2hhd", -12},
    {"%-.2hhd", -123},
    {"%-.2hd", 0},
    {"%-.2hd", 1},
    {"%-.2hd", 12},
    {"%-.2hd", 123},
    {"%-.2hd", -1},
    {"%-.2hd", -12},
    {"%-.2hd", -123},
    {"%-2d", 0},
    {"%-2d", 1},
    {"%-2d", 12},
    {"%-2d", 123},
    {"%-2d", -1},
    {"%-2d", -12},
    {"%-2d", -123},
    {"%-2hhd", 0},
    {"%-2hhd", 1},
    {"%-2hhd", 12},
    {"%-2hhd", 123},
    {"%-2hhd", -1},
    {"%-2hhd", -12},
    {"%-2hhd", -123},
    {"%-2hd", 0},
    {"%-2hd", 1},
    {"%-2hd", 12},
    {"%-2hd", 123},
    {"%-2hd", -1},
    {"%-2hd", -12},
    {"%-2hd", -123},
    {"%-2.2d", 0},
    {"%-2.2d", 1},
    {"%-2.2d", 12},
    {"%-2.2d", 123},
    {"%-2.2d", -1},
    {"%-2.2d", -12},
    {"%-2.2d", -123},
    {"%-2.2hhd", 0},
    {"%-2.2hhd", 1},
    {"%-2.2hhd", 12},
    {"%-2.2hhd", 123},
    {"%-2.2hhd", -1},
    {"%-2.2hhd", -12},
    {"%-2.2hhd", -123},
    {"%-2.2hd", 0},
    {"%-2.2hd", 1},
    {"%-2.2hd", 12},
    {"%-2.2hd", 123},
    {"%-2.2hd", -1},
    {"%-2.2hd", -12},
    {"%-2.2hd", -123},
    {"%+d", 0},
    {"%+d", 1},
    {"%+d", 12},
    {"%+d", 123},
    {"%+d", -1},
    {"%+d", -12},
    {"%+d", -123},
    {"%+hhd", 0},
    {"%+hhd", 1},
    {"%+hhd", 12},
    {"%+hhd", 123},
    {"%+hhd", -1},
    {"%+hhd", -12},
    {"%+hhd", -123},
    {"%+hd", 0},
    {"%+hd", 1},
    {"%+hd", 12},
    {"%+hd", 123},
    {"%+hd", -1},
    {"%+hd", -12},
    {"%+hd", -123},
    {"%+.2d", 0},
    {"%+.2d", 1},
    {"%+.2d", 12},
    {"%+.2d", 123},
    {"%+.2d", -1},
    {"%+.2d", -12},
    {"%+.2d", -123},
    {"%+.2hhd", 0},
    {"%+.2hhd", 1},
    {"%+.2hhd", 12},
    {"%+.2hhd", 123},
    {"%+.2hhd", -1},
    {"%+.2hhd", -12},
    {"%+.2hhd", -123},
    {"%+.2hd", 0},
    {"%+.2hd", 1},
    {"%+.2hd", 12},
    {"%+.2hd", 123},
    {"%+.2hd", -1},
    {"%+.2hd", -12},
    {"%+.2hd", -123},
    {"%+2d", 0},
    {"%+2d", 1},
    {"%+2d", 12},
    {"%+2d", 123},
    {"%+2d", -1},
    {"%+2d", -12},
    {"%+2d", -123},
    {"%+2hhd", 0},
    {"%+2hhd", 1},
    {"%+2hhd", 12},
    {"%+2hhd", 123},
    {"%+2hhd", -1},
    {"%+2hhd", -12},
    {"%+2hhd", -123},
    {"%+2hd", 0},
    {"%+2hd", 1},
    {"%+2hd", 12},
    {"%+2hd", 123},
    {"%+2hd", -1},
    {"%+2hd", -12},
    {"%+2hd", -123},
    {"%+2.2d", 0},
    {"%+2.2d", 1},
    {"%+2.2d", 12},
    {"%+2.2d", 123},
    {"%+2.2d", -1},
    {"%+2.2d", -12},
    {"%+2.2d", -123},
    {"%+2.2hhd", 0},
    {"%+2.2hhd", 1},
    {"%+2.2hhd", 12},
    {"%+2.2hhd", 123},
    {"%+2.2hhd", -1},
    {"%+2.2hhd", -12},
    {"%+2.2hhd", -123},
    {"%+2.2hd", 0},
    {"%+2.2hd", 1},
    {"%+2.2hd", 12},
    {"%+2.2hd", 123},
    {"%+2.2hd", -1},
    {"%+2.2hd", -12},
    {"%+2.2hd", -123},
    {"% d", 0},
    {"% d", 1},
    {"% d", 12},
    {"% d", 123},
    {"% d", -1},
    {"% d", -12},
    {"% d", -123},
    {"% hhd", 0},
    {"% hhd", 1},
    {"% hhd", 12},
    {"% hhd", 123},
    {"% hhd", -1},
    {"% hhd", -12},
    {"% hhd", -123},
    {"% hd", 0},
    {"% hd", 1},
    {"% hd", 12},
    {"% hd", 123},
    {"% hd", -1},
    {"% hd", -12},
    {"% hd", -123},
    {"% .2d", 0},
    {"% .2d", 1},
    {"% .2d", 12},
    {"% .2d", 123},
    {"% .2d", -1},
    {"% .2d", -12},
    {"% .2d", -123},
    {"% .2hhd", 0},
    {"% .2hhd", 1},
    {"% .2hhd", 12},
    {"% .2hhd", 123},
    {"% .2hhd", -1},
    {"% .2hhd", -12},
    {"% .2hhd", -123},
    {"% .2hd", 0},
    {"% .2hd", 1},
    {"% .2hd", 12},
    {"% .2hd", 123},
    {"% .2hd", -1},
    {"% .2hd", -12},
    {"% .2hd", -123},
    {"% 2d", 0},
    {"% 2d", 1},
    {"% 2d", 12},
    {"% 2d", 123},
    {"% 2d", -1},
    {"% 2d", -12},
    {"% 2d", -123},
    {"% 2hhd", 0},
    {"% 2hhd", 1},
    {"% 2hhd", 12},
    {"% 2hhd", 123},
    {"% 2hhd", -1},
    {"% 2hhd", -12},
    {"% 2hhd", -123},
    {"% 2hd", 0},
    {"% 2hd", 1},
    {"% 2hd", 12},
    {"% 2hd", 123},
    {"% 2hd", -1},
    {"% 2hd", -12},
    {"% 2hd", -123},
    {"% 2.2d", 0},
    {"% 2.2d", 1},
    {"% 2.2d", 12},
    {"% 2.2d", 123},
    {"% 2.2d", -1},
    {"% 2.2d", -12},
    {"% 2.2d", -123},
    {"% 2.2hhd", 0},
    {"% 2.2hhd", 1},
    {"% 2.2hhd", 12},
    {"% 2.2hhd", 123},
    {"% 2.2hhd", -1},
    {"% 2.2hhd", -12},
    {"% 2.2hhd", -123},
    {"% 2.2hd", 0},
    {"% 2.2hd", 1},
    {"% 2.2hd", 12},
    {"% 2.2hd", 123},
    {"% 2.2hd", -1},
    {"% 2.2hd", -12},
    {"% 2.2hd", -123},
    {"%0d", 0},
    {"%0d", 1},
    {"%0d", 12},
    {"%0d", 123},
    {"%0d", -1},
    {"%0d", -12},
    {"%0d", -123},
    {"%0hhd", 0},
    {"%0hhd", 1},
    {"%0hhd", 12},
    {"%0hhd", 123},
    {"%0hhd", -1},
    {"%0hhd", -12},
    {"%0hhd", -123},
    {"%0hd", 0},
    {"%0hd", 1},
    {"%0hd", 12},
    {"%0hd", 123},
    {"%0hd", -1},
    {"%0hd", -12},
    {"%0hd", -123},
    {"%02d", 0},
    {"%02d", 1},
    {"%02d", 12},
    {"%02d", 123},
    {"%02d", -1},
    {"%02d", -12},
    {"%02d", -123},
    {"%02hhd", 0},
    {"%02hhd", 1},
    {"%02hhd", 12},
    {"%02hhd", 123},
    {"%02hhd", -1},
    {"%02hhd", -12},
    {"%02hhd", -123},
    {"%02hd", 0},
    {"%02hd", 1},
    {"%02hd", 12},
    {"%02hd", 123},
    {"%02hd", -1},
    {"%02hd", -12},
    {"%02hd", -123},
    {"%-+d", 0},
    {"%-+d", 1},
    {"%-+d", 12},
    {"%-+d", 123},
    {"%-+d", -1},
    {"%-+d", -12},
    {"%-+d", -123},
    {"%-+hhd", 0},
    {"%-+hhd", 1},
    {"%-+hhd", 12},
    {"%-+hhd", 123},
    {"%-+hhd", -1},
    {"%-+hhd", -12},
    {"%-+hhd", -123},
    {"%-+hd", 0},
    {"%-+hd", 1},
    {"%-+hd", 12},
    {"%-+hd", 123},
    {"%-+hd", -1},
    {"%-+hd", -12},
    {"%-+hd", -123},
    {"%-+.2d", 0},
    {"%-+.2d", 1},
    {"%-+.2d", 12},
    {"%-+.2d", 123},
    {"%-+.2d", -1},
    {"%-+.2d", -12},
    {"%-+.2d", -123},
    {"%-+.2hhd", 0},
    {"%-+.2hhd", 1},
    {"%-+.2hhd", 12},
    {"%-+.2hhd", 123},
    {"%-+.2hhd", -1},
    {"%-+.2hhd", -12},
    {"%-+.2hhd", -123},
    {"%-+.2hd", 0},
    {"%-+.2hd", 1},
    {"%-+.2hd", 12},
    {"%-+.2hd", 123},
    {"%-+.2hd", -1},
    {"%-+.2hd", -12},
    {"%-+.2hd", -123},
    {"%-+2d", 0},
    {"%-+2d", 1},
    {"%-+2d", 12},
    {"%-+2d", 123},
    {"%-+2d", -1},
    {"%-+2d", -12},
    {"%-+2d", -123},
    {"%-+2hhd", 0},
    {"%-+2hhd", 1},
    {"%-+2hhd", 12},
    {"%-+2hhd", 123},
    {"%-+2hhd", -1},
    {"%-+2hhd", -12},
    {"%-+2hhd", -123},
    {"%-+2hd", 0},
    {"%-+2hd", 1},
    {"%-+2hd", 12},
    {"%-+2hd", 123},
    {"%-+2hd", -1},
    {"%-+2hd", -12},
    {"%-+2hd", -123},
    {"%-+2.2d", 0},
    {"%-+2.2d", 1},
    {"%-+2.2d", 12},
    {"%-+2.2d", 123},
    {"%-+2.2d", -1},
    {"%-+2.2d", -12},
    {"%-+2.2d", -123},
    {"%-+2.2hhd", 0},
    {"%-+2.2hhd", 1},
    {"%-+2.2hhd", 12},
    {"%-+2.2hhd", 123},
    {"%-+2.2hhd", -1},
    {"%-+2.2hhd", -12},
    {"%-+2.2hhd", -123},
    {"%-+2.2hd", 0},
    {"%-+2.2hd", 1},
    {"%-+2.2hd", 12},
    {"%-+2.2hd", 123},
    {"%-+2.2hd", -1},
    {"%-+2.2hd", -12},
    {"%-+2.2hd", -123},
    {"%.2i", 0},
    {"%.2i", 1},
    {"%.2i", 12},
    {"%.2i", 123},
    {"%.2i", -1},
    {"%.2i", -12},
    {"%.2i", -123},
    {"%.2hhi", 0},
    {"%.2hhi", 1},
    {"%.2hhi", 12},
    {"%.2hhi", 123},
    {"%.2hhi", -1},
    {"%.2hhi", -12},
    {"%.2hhi", -123},
    {"%.2hi", 0},
    {"%.2hi", 1},
    {"%.2hi", 12},
    {"%.2hi", 123},
    {"%.2hi", -1},
    {"%.2hi", -12},
    {"%.2hi", -123},
    {"%2i", 0},
    {"%2i", 1},
    {"%2i", 12},
    {"%2i", 123},
    {"%2i", -1},
    {"%2i", -12},
    {"%2i", -123},
    {"%2hhi", 0},
    {"%2hhi", 1},
    {"%2hhi", 12},
    {"%2hhi", 123},
    {"%2hhi", -1},
    {"%2hhi", -12},
    {"%2hhi", -123},
    {"%2hi", 0},
    {"%2hi", 1},
    {"%2hi", 12},
    {"%2hi", 123},
    {"%2hi", -1},
    {"%2hi", -12},
    {"%2hi", -123},
    {"%- d", 0},
    {"%- d", 1},
    {"%- d", 12},
    {"%- d", 123},
    {"%- d", -1},
    {"%- d", -12},
    {"%- d", -123},
    {"%- hhd", 0},
    {"%- hhd", 1},
    {"%- hhd", 12},
    {"%- hhd", 123},
    {"%- hhd", -1},
    {"%- hhd", -12},
    {"%- hhd", -123},
    {"%- hd", 0},
    {"%- hd", 1},
    {"%- hd", 12},
    {"%- hd", 123},
    {"%- hd", -1},
    {"%- hd", -12},
    {"%- hd", -123},
    {"%- .2d", 0},
    {"%- .2d", 1},
    {"%- .2d", 12},
    {"%- .2d", 123},
    {"%- .2d", -1},
    {"%- .2d", -12},
    {"%- .2d", -123},
    {"%- .2hhd", 0},
    {"%- .2hhd", 1},
    {"%- .2hhd", 12},
    {"%- .2hhd", 123},
    {"%- .2hhd", -1},
    {"%- .2hhd", -12},
    {"%- .2hhd", -123},
    {"%- .2hd", 0},
    {"%- .2hd", 1},
    {"%- .2hd", 12},
    {"%- .2hd", 123},
    {"%- .2hd", -1},
    {"%- .2hd", -12},
    {"%- .2hd", -123},
    {"%- 2d", 0},
    {"%- 2d", 1},
    {"%- 2d", 12},
    {"%- 2d", 123},
    {"%- 2d", -1},
    {"%- 2d", -12},
    {"%- 2d", -123},
    {"%- 2hhd", 0},
    {"%- 2hhd", 1},
    {"%- 2hhd", 12},
    {"%- 2hhd", 123},
    {"%- 2hhd", -1},
    {"%- 2hhd", -12},
    {"%- 2hhd", -123},
    {"%- 2hd", 0},
    {"%- 2hd", 1},
    {"%- 2hd", 12},
    {"%- 2hd", 123},
    {"%- 2hd", -1},
    {"%- 2hd", -12},
    {"%- 2hd", -123},
    {"%- 2.2d", 0},
    {"%- 2.2d", 1},
    {"%- 2.2d", 12},
    {"%- 2.2d", 123},
    {"%- 2.2d", -1},
    {"%- 2.2d", -12},
    {"%- 2.2d", -123},
    {"%- 2.2hhd", 0},
    {"%- 2.2hhd", 1},
    {"%- 2.2hhd", 12},
    {"%- 2.2hhd", 123},
    {"%- 2.2hhd", -1},
    {"%- 2.2hhd", -12},
    {"%- 2.2hhd", -123},
    {"%- 2.2hd", 0},
    {"%- 2.2hd", 1},
    {"%- 2.2hd", 12},
    {"%- 2.2hd", 123},
    {"%- 2.2hd", -1},
    {"%- 2.2hd", -12},
    {"%- 2.2hd", -123},
    {"%+0d", 0},
    {"%+0d", 1},
    {"%+0d", 12},
    {"%+0d", 123},
    {"%+0d", -1},
    {"%+0d", -12},
    {"%+0d", -123},
    {"%+0hhd", 0},
    {"%+0hhd", 1},
    {"%+0hhd", 12},
    {"%+0hhd", 123},
    {"%+0hhd", -1},
    {"%+0hhd", -12},
    {"%+0hhd", -123},
    {"%+0hd", 0},
    {"%+0hd", 1},
    {"%+0hd", 12},
    {"%+0hd", 123},
    {"%+0hd", -1},
    {"%+0hd", -12},
    {"%+0hd", -123},
    {"%+02d", 0},
    {"%+02d", 1},
    {"%+02d", 12},
    {"%+02d", 123},
    {"%+02d", -1},
    {"%+02d", -12},
    {"%+02d", -123},
    {"%+02hhd", 0},
    {"%+02hhd", 1},
    {"%+02hhd", 12},
    {"%+02hhd", 123},
    {"%+02hhd", -1},
    {"%+02hhd", -12},
    {"%+02hhd", -123},
    {"%+02hd", 0},
    {"%+02hd", 1},
    {"%+02hd", 12},
    {"%+02hd", 123},
    {"%+02hd", -1},
    {"%+02hd", -12},
    {"%+02hd", -123},
    {"% 0d", 0},
    {"% 0d", 1},
    {"% 0d", 12},
    {"% 0d", 123},
    {"% 0d", -1},
    {"% 0d", -12},
    {"% 0d", -123},
    {"% 0hhd", 0},
    {"% 0hhd", 1},
    {"% 0hhd", 12},
    {"% 0hhd", 123},
    {"% 0hhd", -1},
    {"% 0hhd", -12},
    {"% 0hhd", -123},
    {"% 0hd", 0},
    {"% 0hd", 1},
    {"% 0hd", 12},
    {"% 0hd", 123},
    {"% 0hd", -1},
    {"% 0hd", -12},
    {"% 0hd", -123},
    {"% 02d", 0},
    {"% 02d", 1},
    {"% 02d", 12},
    {"% 02d", 123},
    {"% 02d", -1},
    {"% 02d", -12},
    {"% 02d", -123},
    {"% 02hhd", 0},
    {"% 02hhd", 1},
    {"% 02hhd", 12},
    {"% 02hhd", 123},
    {"% 02hhd", -1},
    {"% 02hhd", -12},
    {"% 02hhd", -123},
    {"% 02hd", 0},
    {"% 02hd", 1},
    {"% 02hd", 12},
    {"% 02hd", 123},
    {"% 02hd", -1},
    {"% 02hd", -12},
    {"% 02hd", -123},
    {"%i", 0},
    {"%i", 1},
    {"%i", 12},
    {"%i", 123},
    {"%i", -1},
    {"%i", -12},
    {"%i", -123},
    {"%hhi", 0},
    {"%hhi", 1},
    {"%hhi", 12},
    {"%hhi", 123},
    {"%hhi", -1},
    {"%hhi", -12},
    {"%hhi", -123},
    {"%hi", 0},
    {"%hi", 1},
    {"%hi", 12},
    {"%hi", 123},
    {"%hi", -1},
    {"%hi", -12},
    {"%hi", -123},
    {"%-2ho", 123},
    {"%-2.2o", 0},
    {"%-2.2o", 1},
    {"%-2.2o", 12},
    {"%-2.2o", 123},
    {"%-2.2hho", 0},
    {"%-2.2hho", 1},
    {"%-2.2hho", 12},
    {"%-2.2hho", 123},
    {"%-2.2ho", 0},
    {"%-2.2ho", 1},
    {"%-2.2ho", 12},
    {"%-2.2ho", 123},
    {"%#o", 0},
    {"%#o", 1},
    {"%#o", 12},
    {"%#o", 123},
    {"%#hho", 0},
    {"%#hho", 1},
    {"%#hho", 12},
    {"%#hho", 123},
    {"%2.2i", 0},
    {"%2.2i", 1},
    {"%2.2i", 12},
    {"%2.2i", 123},
    {"%2.2i", -1},
    {"%2.2i", -12},
    {"%2.2i", -123},
    {"%2.2hhi", 0},
    {"%2.2hhi", 1},
    {"%2.2hhi", 12},
    {"%2.2hhi", 123},
    {"%2.2hhi", -1},
    {"%2.2hhi", -12},
    {"%2.2hhi", -123},
    {"%2.2hi", 0},
    {"%2.2hi", 1},
    {"%2.2hi", 12},
    {"%2.2hi", 123},
    {"%2.2hi", -1},
    {"%2.2hi", -12},
    {"%2.2hi", -123},
    {"%u", 0},
    {"%u", 1},
    {"%u", 12},
    {"%u", 123},
    {"%hhu", 0},
    {"%hhu", 1},
    {"%hhu", 12},
    {"%hhu", 123},
    {"%hu", 0},
    {"%hu", 1},
    {"%hu", 12},
    {"%hu", 123},
    {"%.2u", 0},
    {"%.2u", 1},
    {"%.2u", 12},
    {"%.2u", 123},
    {"%.2hhu", 0},
    {"%.2hhu", 1},
    {"%.2hhu", 12},
    {"%.2hhu", 123},
    {"%.2hu", 0},
    {"%.2hu", 1},
    {"%.2hu", 12},
    {"%.2hu", 123},
    {"%2u", 0},
    {"%2u", 1},
    {"%2u", 12},
    {"%2u", 123},
    {"%2hhu", 0},
    {"%2hhu", 1},
    {"%2hhu", 12},
    {"%2hhu", 123},
    {"%2hu", 0},
    {"%2hu", 1},
    {"%2hu", 12},
    {"%2hu", 123},
    {"%2.2u", 0},
    {"%2.2u", 1},
    {"%2.2u", 12},
    {"%2.2u", 123},
    {"%2.2hhu", 0},
    {"%2.2hhu", 1},
    {"%2.2hhu", 12},
    {"%2.2hhu", 123},
    {"%2.2hu", 0},
    {"%2.2hu", 1},
    {"%2.2hu", 12},
    {"%2.2hu", 123},
    {"%-u", 0},
    {"%-u", 1},
    {"%-u", 12},
    {"%-u", 123},
    {"%-hhu", 0},
    {"%-hhu", 1},
    {"%-hhu", 12},
    {"%-hhu", 123},
    {"%-hu", 0},
    {"%-hu", 1},
    {"%-hu", 12},
    {"%-hu", 123},
    {"%-.2u", 0},
    {"%-.2u", 1},
    {"%-.2u", 12},
    {"%-.2u", 123},
    {"%-.2hhu", 0},
    {"%-.2hhu", 1},
    {"%-.2hhu", 12},
    {"%-.2hhu", 123},
    {"%-.2hu", 0},
    {"%-.2hu", 1},
    {"%-.2hu", 12},
    {"%-.2hu", 123},
    {"%-2u", 0},
    {"%-2u", 1},
    {"%-2u", 12},
    {"%-2u", 123},
    {"%-2hhu", 0},
    {"%-2hhu", 1},
    {"%-2hhu", 12},
    {"%-2hhu", 123},
    {"%-2hu", 0},
    {"%-2hu", 1},
    {"%-2hu", 12},
    {"%-2hu", 123},
    {"%-2.2u", 0},
    {"%-2.2u", 1},
    {"%-2.2u", 12},
    {"%-2.2u", 123},
    {"%-2.2hhu", 0},
    {"%-2.2hhu", 1},
    {"%-2.2hhu", 12},
    {"%-2.2hhu", 123},
    {"%-2.2hu", 0},
    {"%-2.2hu", 1},
    {"%-2.2hu", 12},
    {"%-2.2hu", 123},
    {"%o", 0},
    {"%o", 1},
    {"%o", 12},
    {"%o", 123},
    {"%hho", 0},
    {"%hho", 1},
    {"%hho", 12},
    {"%hho", 123},
    {"%ho", 0},
    {"%ho", 1},
    {"%ho", 12},
    {"%ho", 123},
    {"%.2o", 0},
    {"%.2o", 1},
    {"%.2o", 12},
    {"%.2o", 123},
    {"%.2hho", 0},
    {"%.2hho", 1},
    {"%.2hho", 12},
    {"%.2hho", 123},
    {"%.2ho", 0},
    {"%.2ho", 1},
    {"%.2ho", 12},
    {"%.2ho", 123},
    {"%2o", 0},
    {"%2o", 1},
    {"%2o", 12},
    {"%2o", 123},
    {"%2hho", 0},
    {"%2hho", 1},
    {"%2hho", 12},
    {"%2hho", 123},
    {"%2ho", 0},
    {"%2ho", 1},
    {"%2ho", 12},
    {"%2ho", 123},
    {"%2.2o", 0},
    {"%2.2o", 1},
    {"%2.2o", 12},
    {"%2.2o", 123},
    {"%2.2hho", 0},
    {"%2.2hho", 1},
    {"%2.2hho", 12},
    {"%2.2hho", 123},
    {"%2.2ho", 0},
    {"%2.2ho", 1},
    {"%2.2ho", 12},
    {"%2.2ho", 123},
    {"%-o", 0},
    {"%-o", 1},
    {"%-o", 12},
    {"%-o", 123},
    {"%-hho", 0},
    {"%-hho", 1},
    {"%-hho", 12},
    {"%-hho", 123},
    {"%-ho", 0},
    {"%-ho", 1},
    {"%-ho", 12},
    {"%-ho", 123},
    {"%-.2o", 0},
    {"%-.2o", 1},
    {"%-.2o", 12},
    {"%-.2o", 123},
    {"%-.2hho", 0},
    {"%-.2hho", 1},
    {"%-.2hho", 12},
    {"%-.2hho", 123},
    {"%-.2ho", 0},
    {"%-.2ho", 1},
    {"%-.2ho", 12},
    {"%-.2ho", 123},
    {"%-2o", 0},
    {"%-2o", 1},
    {"%-2o", 12},
    {"%-2o", 123},
    {"%-2hho", 0},
    {"%-2hho", 1},
    {"%-2hho", 12},
    {"%-2hho", 123},
    {"%-2ho", 0},
    {"%-2ho", 1},
    {"%-2ho", 12},
    {"%#.2x", 0},
    {"%#.2x", 1},
    {"%#.2x", 12},
    {"%#.2x", 123},
    {"%#.2hhx", 0},
    {"%#.2hhx", 1},
    {"%#.2hhx", 12},
    {"%#.2hhx", 123},
    {"%#.2hx", 0},
    {"%#.2hx", 1},
    {"%#.2hx", 12},
    {"%#.2hx", 123},
    {"%#2x", 0},
    {"%#2x", 1},
    {"%#2x", 12},
    {"%#2x", 123},
    {"%#2hhx", 0},
    {"%#2hhx", 1},
    {"%#2hhx", 12},
    {"%#2hhx", 123},
    {"%#2hx", 0},
    {"%#2hx", 1},
    {"%#2hx", 12},
    {"%#2hx", 123},
    {"%#2.2x", 0},
    {"%#2.2x", 1},
    {"%#2.2x", 12},
    {"%#2.2x", 123},
    {"%#2.2hhx", 0},
    {"%#2.2hhx", 1},
    {"%#2.2hhx", 12},
    {"%#2.2hhx", 123},
    {"%#2.2hx", 0},
    {"%#2.2hx", 1},
    {"%#2.2hx", 12},
    {"%#2.2hx", 123},
    {"%0x", 0},
    {"%0x", 1},
    {"%0x", 12},
    {"%0x", 123},
    {"%0hhx", 0},
    {"%0hhx", 1},
    {"%0hhx", 12},
    {"%0hhx", 123},
    {"%0hx", 0},
    {"%0hx", 1},
    {"%0hx", 12},
    {"%0hx", 123},
    {"%02x", 0},
    {"%02x", 1},
    {"%02x", 12},
    {"%02x", 123},
    {"%02o", 0},
    {"%02o", 1},
    {"%02o", 12},
    {"%02o", 123},
    {"%02hhx", 0},
    {"%02hhx", 1},
    {"%02hhx", 12},
    {"%02hhx", 123},
    {"%02hx", 0},
    {"%02hx", 1},
    {"%02hx", 12},
    {"%02hx", 123},
    {"%#0x", 0},
    {"%#0x", 1},
    {"%#0x", 12},
    {"%#0x", 123},
    {"%#0o", 0},
    {"%#0o", 1},
    {"%#0o", 12},
    {"%#0o", 123},
    {"%#0hhx", 0},
    {"%#0hhx", 1},
    {"%#0hhx", 12},
    {"%#0hhx", 123},
    {"%#0hx", 0},
    {"%#0hx", 1},
    {"%#0hx", 12},
    {"%#0hx", 123},
    {"%#02x", 0},
    {"%#02x", 1},
    {"%#02x", 12},
    {"%#ho", 0},
    {"%#ho", 1},
    {"%#ho", 12},
    {"%#ho", 123},
    {"%#.2o", 0},
    {"%#.2o", 1},
    {"%#.2o", 12},
    {"%#.2o", 123},
    {"%#.2hho", 0},
    {"%#.2hho", 1},
    {"%#.2hho", 12},
    {"%#.2hho", 123},
    {"%#.2ho", 0},
    {"%#.2ho", 1},
    {"%#.2ho", 12},
    {"%#.2ho", 123},
    {"%#2o", 0},
    {"%#2o", 1},
    {"%#2o", 12},
    {"%#2o", 123},
    {"%#2hho", 0},
    {"%#2hho", 1},
    {"%#2hho", 12},
    {"%#2hho", 123},
    {"%#2ho", 0},
    {"%#2ho", 1},
    {"%#2ho", 12},
    {"%#2ho", 123},
    {"%#2.2o", 0},
    {"%#2.2o", 1},
    {"%#2.2o", 12},
    {"%#2.2o", 123},
    {"%#2.2hho", 0},
    {"%#2.2hho", 1},
    {"%#2.2hho", 12},
    {"%#2.2hho", 123},
    {"%#2.2ho", 0},
    {"%#2.2ho", 1},
    {"%#2.2ho", 12},
    {"%#2.2ho", 123},
    {"%-#o", 0},
    {"%-#o", 1},
    {"%-#o", 12},
    {"%-#o", 123},
    {"%-#hho", 0},
    {"%-#hho", 1},
    {"%-#hho", 12},
    {"%-#hho", 123},
    {"%-#ho", 0},
    {"%-#ho", 1},
    {"%-#ho", 12},
    {"%-#ho", 123},
    {"%-#.2o", 0},
    {"%-#.2o", 1},
    {"%-#.2o", 12},
    {"%-#.2o", 123},
    {"%-#.2hho", 0},
    {"%-#.2hho", 1},
    {"%-#.2hho", 12},
    {"%-#.2hho", 123},
    {"%-#.2ho", 0},
    {"%-#.2ho", 1},
    {"%-#.2ho", 12},
    {"%-#.2ho", 123},
    {"%-#2o", 0},
    {"%-#2o", 1},
    {"%-#2o", 12},
    {"%-#2o", 123},
    {"%-#2hho", 0},
    {"%-#2hho", 1},
    {"%-#2hho", 12},
    {"%-#2hho", 123},
    {"%-#2ho", 0},
    {"%-#2ho", 1},
    {"%-#2ho", 12},
    {"%-#2ho", 123},
    {"%-#2.2o", 0},
    {"%-#2.2o", 1},
    {"%-#2.2o", 12},
    {"%-#2.2o", 123},
    {"%-#2.2hho", 0},
    {"%-#2.2hho", 1},
    {"%-#2.2hho", 12},
    {"%-#2.2hho", 123},
    {"%-#2.2ho", 0},
    {"%-#2.2ho", 1},
    {"%-#2.2ho", 12},
    {"%-#2.2ho", 123},
    {"%x", 0},
    {"%x", 1},
    {"%x", 12},
    {"%x", 123},
    {"%hhx", 0},
    {"%hhx", 1},
    {"%hhx", 12},
    {"%hhx", 123},
    {"%hx", 0},
    {"%hx", 1},
    {"%hx", 12},
    {"%hx", 123},
    {"%.2x", 0},
    {"%.2x", 1},
    {"%.2x", 12},
    {"%.2x", 123},
    {"%.2hhx", 0},
    {"%.2hhx", 1},
    {"%.2hhx", 12},
    {"%.2hhx", 123},
    {"%.2hx", 0},
    {"%.2hx", 1},
    {"%.2hx", 12},
    {"%.2hx", 123},
    {"%2x", 0},
    {"%2x", 1},
    {"%2x", 12},
    {"%2x", 123},
    {"%2hhx", 0},
    {"%2hhx", 1},
    {"%2hhx", 12},
    {"%2hhx", 123},
    {"%2hx", 0},
    {"%2hx", 1},
    {"%2hx", 12},
    {"%2hx", 123},
    {"%2.2x", 0},
    {"%2.2x", 1},
    {"%2.2x", 12},
    {"%2.2x", 123},
    {"%2.2hhx", 0},
    {"%2.2hhx", 1},
    {"%2.2hhx", 12},
    {"%2.2hhx", 123},
    {"%2.2hx", 0},
    {"%2.2hx", 1},
    {"%2.2hx", 12},
    {"%2.2hx", 123},
    {"%#x", 0},
    {"%#x", 1},
    {"%#x", 12},
    {"%#x", 123},
    {"%#hhx", 0},
    {"%#hhx", 1},
    {"%#hhx", 12},
    {"%#hhx", 123},
    {"%#hx", 0},
    {"%#hx", 1},
    {"%#hx", 12},
    {"%#hx", 123},
    {"%#02x", 123},
    {"%#02hhx", 0},
    {"%#02hhx", 1},
    {"%#02hhx", 12},
    {"%#02hhx", 123},
    {"%#02hx", 0},
    {"%#02hx", 1},
    {"%#02hx", 12},
    {"%#02hx", 123},
    {"%X", 0},
    {"%X", 1},
    {"%X", 12},
    {"%X", 123},
    {"%hhX", 0},
    {"%hhX", 1},
    {"%hhX", 12},
    {"%hhX", 123},
    {"%hX", 0},
    {"%hX", 1},
    {"%hX", 12},
    {"%hX", 123},
    {"%.2X", 0},
    {"%.2X", 1},
    {"%.2X", 12},
    {"%.2X", 123},
    {"%.2hhX", 0},
    {"%.2hhX", 1},
    {"%.2hhX", 12},
    {"%.2hhX", 123},
    {"%.2hX", 0},
    {"%.2hX", 1},
    {"%.2hX", 12},
    {"%.2hX", 123},
    {"%2X", 0},
    {"%2X", 1},
    {"%2X", 12},
    {"%2X", 123},
    {"%2hhX", 0},
    {"%2hhX", 1},
    {"%2hhX", 12},
    {"%2hhX", 123},
    {"%2hX", 0},
    {"%2hX", 1},
    {"%2hX", 12},
    {"%2hX", 123},
    {"%2.2X", 0},
    {"%2.2X", 1},
    {"%2.2X", 12},
    {"%2.2X", 123},
    {"%2.2hhX", 0},
    {"%2.2hhX", 1},
    {"%2.2hhX", 12},
    {"%2.2hhX", 123},
    {"%2.2hX", 0},
    {"%2.2hX", 1},
    {"%2.2hX", 12},
    {"%2.2hX", 123},
    {"%#X", 0},
    {"%#X", 1},
    {"%#X", 12},
    {"%#X", 123},
    {"%#hhX", 0},
    {"%#hhX", 1},
    {"%#hhX", 12},
    {"%#hhX", 123},
    {"%#hX", 0},
    {"%#hX", 1},
    {"%#hX", 12},
    {"%#hX", 123},
    {"%#.2X", 0},
    {"%#.2X", 1},
    {"%#.2X", 12},
    {"%#.2X", 123},
    {"%#.2hhX", 0},
    {"%#.2hhX", 1},
    {"%#.2hhX", 12},
    {"%#.2hhX", 123},
    {"%#.2hX", 0},
    {"%#.2hX", 1},
    {"%#.2hX", 12},
    {"%#.2hX", 123},
    {"%#2X", 0},
    {"%#2X", 1},
    {"%#2X", 12},
    {"%#2X", 123},
    {"%#2hhX", 0},
    {"%#2hhX", 1},
    {"%#2hhX", 12},
    {"%#2hhX", 123},
    {"%#2hX", 0},
    {"%#2hX", 1},
    {"%#2hX", 12},
    {"%#2hX", 123},
    {"%#2.2X", 0},
    {"%#2.2X", 1},
    {"%#2.2X", 12},
    {"%#2.2X", 123},
    {"%#2.2hhX", 0},
    {"%#2.2hhX", 1},
    {"%#2.2hhX", 12},
    {"%#2.2hhX", 123},
    {"%#2.2hX", 0},
    {"%#2.2hX", 1},
    {"%#2.2hX", 12},
    {"%#2.2hX", 123},
    {"%0X", 0},
    {"%0X", 1},
    {"%0X", 12},
    {"%0X", 123},
    {"%0hhX", 0},
    {"%0hhX", 1},
    {"%0hhX", 12},
    {"%0hhX", 123},
    {"%0hX", 0},
    {"%0hX", 1},
    {"%0hX", 12},
    {"%0hX", 123},
    {"%02X", 0},
    {"%02X", 1},
    {"%02X", 12},
    {"%02X", 123},
    {"%02hhX", 0},
    {"%02hhX", 1},
    {"%02hhX", 12},
    {"%02hhX", 123},
    {"%02hX", 0},
    {"%02hX", 1},
    {"%02hX", 12},
    {"%02hX", 123},
    {"%#0X", 0},
    {"%#0X", 1},
    {"%#0X", 12},
    {"%#0X", 123},
    {"%#0hhX", 0},
    {"%#0hhX", 1},
    {"%#0hhX", 12},
    {"%#0hhX", 123},
    {"%#0hX", 0},
    {"%#0hX", 1},
    {"%#0hX", 12},
    {"%#0hX", 123},
    {"%#02X", 0},
    {"%#02X", 1},
    {"%#02X", 12},
    {"%#02X", 123},
    {"%#02hhX", 0},
    {"%#02hhX", 1},
    {"%#02hhX", 12},
    {"%#02hhX", 123},
    {"%#02hX", 0},
    {"%#02hX", 1},
    {"%#02hX", 12},
    {"%#02hX", 123},
    // clang-format on
};

TEST(StrPrintfTest, Normal) {
    char dst[20];
    size_t result;

    // NOTE: Trying to call StrPrintf with an empty format string will generate a
    //       a compiler warning.

    result = StrPrintf(dst, LEN(dst), "a");
    EXPECT_EQ(result, 1);
    EXPECT_STREQ(dst, "a");
}

TEST(StrPrintfTest, IntTest) {
    char dst1[20];
    char dst2[20];

    for (size_t i = 0; i < LEN(int_test); i++) {
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wformat-nonliteral"
        auto r1 = StrPrintf(dst1, LEN(dst1), int_test[i].fmt, int_test[i].val);
        auto r2 = snprintf(dst2, LEN(dst2), int_test[i].fmt, int_test[i].val);
#pragma GCC diagnostic pop

        EXPECT_STREQ(dst1, dst2);
        EXPECT_EQ(r1, r2);
    }
}

// clang-format off
static Test<long> long_test[] = {  // NOLINT
    {"%ld", 0},
    {"%ld", 1},
    {"%ld", 12},
    {"%ld", 123},
    {"%ld", -1},
    {"%ld", -12},
    {"%ld", -123},
    {"%.2ld", 0},
    {"%.2ld", 1},
    {"%.2ld", 12},
    {"%.2ld", 123},
    {"%.2ld", -1},
    {"%.2ld", -12},
    {"%.2ld", -123},
    {"%2ld", 0},
    {"%2ld", 1},
    {"%2ld", 12},
    {"%2ld", 123},
    {"%2ld", -1},
    {"%2ld", -12},
    {"%2ld", -123},
    {"%2.2ld", 0},
    {"%2.2ld", 1},
    {"%2.2ld", 12},
    {"%2.2ld", 123},
    {"%2.2ld", -1},
    {"%2.2ld", -12},
    {"%2.2ld", -123},
    {"%-ld", 0},
    {"%-ld", 1},
    {"%-ld", 12},
    {"%-ld", 123},
    {"%-ld", -1},
    {"%-ld", -12},
    {"%-ld", -123},
    {"%-.2ld", 0},
    {"%-.2ld", 1},
    {"%-.2ld", 12},
    {"%-.2ld", 123},
    {"%-.2ld", -1},
    {"%-.2ld", -12},
    {"%-.2ld", -123},
    {"%-2ld", 0},
    {"%-2ld", 1},
    {"%-2ld", 12},
    {"%-2ld", 123},
    {"%-2ld", -1},
    {"%-2ld", -12},
    {"%-2ld", -123},
    {"%-2.2ld", 0},
    {"%-2.2ld", 1},
    {"%-2.2ld", 12},
    {"%-2.2ld", 123},
    {"%-2.2ld", -1},
    {"%-2.2ld", -12},
    {"%-2.2ld", -123},
    {"%+ld", 0},
    {"%+ld", 1},
    {"%+ld", 12},
    {"%+ld", 123},
    {"%+ld", -1},
    {"%+ld", -12},
    {"%+ld", -123},
    {"%+.2ld", 0},
    {"%+.2ld", 1},
    {"%+.2ld", 12},
    {"%+.2ld", 123},
    {"%+.2ld", -1},
    {"%+.2ld", -12},
    {"%+.2ld", -123},
    {"%+2ld", 0},
    {"%+2ld", 1},
    {"%+2ld", 12},
    {"%+2ld", 123},
    {"%+2ld", -1},
    {"%+2ld", -12},
    {"%+2ld", -123},
    {"%+2.2ld", 0},
    {"%+2.2ld", 1},
    {"%+2.2ld", 12},
    {"%+2.2ld", 123},
    {"%+2.2ld", -1},
    {"%+2.2ld", -12},
    {"%+2.2ld", -123},
    {"% ld", 0},
    {"% ld", 1},
    {"% ld", 12},
    {"% ld", 123},
    {"% ld", -1},
    {"% ld", -12},
    {"% ld", -123},
    {"% .2ld", 0},
    {"% .2ld", 1},
    {"% .2ld", 12},
    {"% .2ld", 123},
    {"% .2ld", -1},
    {"% .2ld", -12},
    {"% .2ld", -123},
    {"% 2ld", 0},
    {"% 2ld", 1},
    {"% 2ld", 12},
    {"% 2ld", 123},
    {"% 2ld", -1},
    {"% 2ld", -12},
    {"% 2ld", -123},
    {"% 2.2ld", 0},
    {"% 2.2ld", 1},
    {"% 2.2ld", 12},
    {"% 2.2ld", 123},
    {"% 2.2ld", -1},
    {"% 2.2ld", -12},
    {"% 2.2ld", -123},
    {"%0ld", 0},
    {"%0ld", 1},
    {"%0ld", 12},
    {"%0ld", 123},
    {"%0ld", -1},
    {"%0ld", -12},
    {"%0ld", -123},
    {"%02ld", 0},
    {"%02ld", 1},
    {"%02ld", 12},
    {"%02ld", 123},
    {"%02ld", -1},
    {"%02ld", -12},
    {"%02ld", -123},
    {"%-+ld", 0},
    {"%-+ld", 1},
    {"%-+ld", 12},
    {"%-+ld", 123},
    {"%-+ld", -1},
    {"%-+ld", -12},
    {"%-+ld", -123},
    {"%-+.2ld", 0},
    {"%-+.2ld", 1},
    {"%-+.2ld", 12},
    {"%-+.2ld", 123},
    {"%-+.2ld", -1},
    {"%-+.2ld", -12},
    {"%-+.2ld", -123},
    {"%-+2ld", 0},
    {"%-+2ld", 1},
    {"%-+2ld", 12},
    {"%-+2ld", 123},
    {"%-+2ld", -1},
    {"%-+2ld", -12},
    {"%-+2ld", -123},
    {"%-+2.2ld", 0},
    {"%-+2.2ld", 1},
    {"%-+2.2ld", 12},
    {"%-+2.2ld", 123},
    {"%-+2.2ld", -1},
    {"%-+2.2ld", -12},
    {"%-+2.2ld", -123},
    {"%.2li", 0},
    {"%.2li", 1},
    {"%.2li", 12},
    {"%.2li", 123},
    {"%.2li", -1},
    {"%.2li", -12},
    {"%.2li", -123},
    {"%2li", 0},
    {"%2li", 1},
    {"%- ld", 0},
    {"%- ld", 1},
    {"%- ld", 12},
    {"%- ld", 123},
    {"%- ld", -1},
    {"%- ld", -12},
    {"%- ld", -123},
    {"%- .2ld", 0},
    {"%- .2ld", 1},
    {"%- .2ld", 12},
    {"%- .2ld", 123},
    {"%- .2ld", -1},
    {"%- .2ld", -12},
    {"%- .2ld", -123},
    {"%- 2ld", 0},
    {"%- 2ld", 1},
    {"%- 2ld", 12},
    {"%- 2ld", 123},
    {"%- 2ld", -1},
    {"%- 2ld", -12},
    {"%- 2ld", -123},
    {"%- 2.2ld", 0},
    {"%- 2.2ld", 1},
    {"%- 2.2ld", 12},
    {"%- 2.2ld", 123},
    {"%- 2.2ld", -1},
    {"%- 2.2ld", -12},
    {"%- 2.2ld", -123},
    {"%+0ld", 0},
    {"%+0ld", 1},
    {"%+0ld", 12},
    {"%+0ld", 123},
    {"%+0ld", -1},
    {"%+0ld", -12},
    {"%+0ld", -123},
    {"%+02ld", 0},
    {"%+02ld", 1},
    {"%+02ld", 12},
    {"%+02ld", 123},
    {"%+02ld", -1},
    {"%+02ld", -12},
    {"%+02ld", -123},
    {"% 0ld", 0},
    {"% 0ld", 1},
    {"% 0ld", 12},
    {"% 0ld", 123},
    {"% 0ld", -1},
    {"% 0ld", -12},
    {"% 0ld", -123},
    {"% 02ld", 0},
    {"% 02ld", 1},
    {"% 02ld", 12},
    {"% 02ld", 123},
    {"% 02ld", -1},
    {"% 02ld", -12},
    {"% 02ld", -123},
    {"%li", 0},
    {"%li", 1},
    {"%li", 12},
    {"%li", 123},
    {"%li", -1},
    {"%li", -12},
    {"%li", -123},
    {"%-2lo", 0},
    {"%-2lo", 1},
    {"%-2lo", 12},
    {"%-2lo", 123},
    {"%-2.2lo", 0},
    {"%-2.2lo", 1},
    {"%-2.2lo", 12},
    {"%-2.2lo", 123},
    {"%2li", 12},
    {"%2li", 123},
    {"%2li", -1},
    {"%2li", -12},
    {"%2li", -123},
    {"%2.2li", 0},
    {"%2.2li", 1},
    {"%2.2li", 12},
    {"%2.2li", 123},
    {"%2.2li", -1},
    {"%2.2li", -12},
    {"%2.2li", -123},
    {"%lu", 0},
    {"%lu", 1},
    {"%lu", 12},
    {"%lu", 123},
    {"%.2lu", 0},
    {"%.2lu", 1},
    {"%.2lu", 12},
    {"%.2lu", 123},
    {"%2lu", 0},
    {"%2lu", 1},
    {"%2lu", 12},
    {"%2lu", 123},
    {"%2.2lu", 0},
    {"%2.2lu", 1},
    {"%2.2lu", 12},
    {"%2.2lu", 123},
    {"%-lu", 0},
    {"%-lu", 1},
    {"%-lu", 12},
    {"%-lu", 123},
    {"%-.2lu", 0},
    {"%-.2lu", 1},
    {"%-.2lu", 12},
    {"%-.2lu", 123},
    {"%-2lu", 0},
    {"%-2lu", 1},
    {"%-2lu", 12},
    {"%-2lu", 123},
    {"%-2.2lu", 0},
    {"%-2.2lu", 1},
    {"%-2.2lu", 12},
    {"%-2.2lu", 123},
    {"%lo", 0},
    {"%lo", 1},
    {"%lo", 12},
    {"%lo", 123},
    {"%.2lo", 0},
    {"%.2lo", 1},
    {"%.2lo", 12},
    {"%.2lo", 123},
    {"%2lo", 0},
    {"%2lo", 1},
    {"%2lo", 12},
    {"%2lo", 123},
    {"%2.2lo", 0},
    {"%2.2lo", 1},
    {"%2.2lo", 12},
    {"%2.2lo", 123},
    {"%-lo", 0},
    {"%-lo", 1},
    {"%-lo", 12},
    {"%-lo", 123},
    {"%-.2lo", 0},
    {"%-.2lo", 1},
    {"%-.2lo", 12},
    {"%-.2lo", 123},
    {"%#lx", 0},
    {"%#lx", 1},
    {"%#lx", 12},
    {"%#lx", 123},
    {"%#.2lx", 0},
    {"%#.2lx", 1},
    {"%#.2lx", 12},
    {"%#.2lx", 123},
    {"%#2lx", 0},
    {"%#2lx", 1},
    {"%#2lx", 12},
    {"%#2lx", 123},
    {"%#2.2lx", 0},
    {"%#2.2lx", 1},
    {"%#2.2lx", 12},
    {"%#2.2lx", 123},
    {"%0lx", 0},
    {"%0lx", 1},
    {"%0lx", 12},
    {"%0lx", 123},
    {"%02lx", 0},
    {"%02lx", 1},
    {"%02lx", 12},
    {"%02lx", 123},
    {"%#0lx", 0},
    {"%#0lx", 1},
    {"%#0lx", 12},
    {"%#0lx", 123},
    {"%#lo", 0},
    {"%#lo", 1},
    {"%#lo", 12},
    {"%#lo", 123},
    {"%#.2lo", 0},
    {"%#.2lo", 1},
    {"%#.2lo", 12},
    {"%#.2lo", 123},
    {"%#2lo", 0},
    {"%#2lo", 1},
    {"%#2lo", 12},
    {"%#2lo", 123},
    {"%#2.2lo", 0},
    {"%#2.2lo", 1},
    {"%#2.2lo", 12},
    {"%#2.2lo", 123},
    {"%-#lo", 0},
    {"%-#lo", 1},
    {"%-#lo", 12},
    {"%-#lo", 123},
    {"%-#.2lo", 0},
    {"%-#.2lo", 1},
    {"%-#.2lo", 12},
    {"%-#.2lo", 123},
    {"%-#2lo", 0},
    {"%-#2lo", 1},
    {"%-#2lo", 12},
    {"%-#2lo", 123},
    {"%-#2.2lo", 0},
    {"%-#2.2lo", 1},
    {"%-#2.2lo", 12},
    {"%-#2.2lo", 123},
    {"%lx", 0},
    {"%lx", 1},
    {"%lx", 12},
    {"%lx", 123},
    {"%.2lx", 0},
    {"%.2lx", 1},
    {"%.2lx", 12},
    {"%.2lx", 123},
    {"%2lx", 0},
    {"%2lx", 1},
    {"%2lx", 12},
    {"%2lx", 123},
    {"%2.2lx", 0},
    {"%2.2lx", 1},
    {"%2.2lx", 12},
    {"%2.2lx", 123},
    {"%#02lx", 0},
    {"%#02lx", 1},
    {"%#02lx", 12},
    {"%#02lx", 123},
    {"%lX", 0},
    {"%lX", 1},
    {"%lX", 12},
    {"%lX", 123},
    {"%.2lX", 0},
    {"%.2lX", 1},
    {"%.2lX", 12},
    {"%.2lX", 123},
    {"%2lX", 0},
    {"%2lX", 1},
    {"%2lX", 12},
    {"%2lX", 123},
    {"%2.2lX", 0},
    {"%2.2lX", 1},
    {"%2.2lX", 12},
    {"%2.2lX", 123},
    {"%#lX", 0},
    {"%#lX", 1},
    {"%#lX", 12},
    {"%#lX", 123},
    {"%#.2lX", 0},
    {"%#.2lX", 1},
    {"%#.2lX", 12},
    {"%#.2lX", 123},
    {"%#2lX", 0},
    {"%#2lX", 1},
    {"%#2lX", 12},
    {"%#2lX", 123},
    {"%#2.2lX", 0},
    {"%#2.2lX", 1},
    {"%#2.2lX", 12},
    {"%#2.2lX", 123},
    {"%0lX", 0},
    {"%0lX", 1},
    {"%0lX", 12},
    {"%0lX", 123},
    {"%02lX", 0},
    {"%02lX", 1},
    {"%02lX", 12},
    {"%02lX", 123},
    {"%#0lX", 0},
    {"%#0lX", 1},
    {"%#0lX", 12},
    {"%#0lX", 123},
    {"%#02lX", 0},
    {"%#02lX", 1},
    {"%#02lX", 12},
    {"%#02lX", 123},
};
// clang-format on

TEST(StrPrintfTest, LongTest) {
    char dst1[20];
    char dst2[20];

    for (size_t i = 0; i < LEN(long_test); i++) {
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wformat-nonliteral"
        auto r1 = StrPrintf(dst1, LEN(dst1), long_test[i].fmt, long_test[i].val);
        auto r2 = snprintf(dst2, LEN(dst2), long_test[i].fmt, long_test[i].val);
#pragma GCC diagnostic pop

        EXPECT_STREQ(dst1, dst2);
        EXPECT_EQ(r1, r2);
    }
}

// clang-format off
static Test<long long> long_long_test[] = { // NOLINT
    {"%lld", 0},
    {"%lld", 1},
    {"%lld", 12},
    {"%lld", 123},
    {"%lld", -1},
    {"%lld", -12},
    {"%lld", -123},
    {"%.2lld", 0},
    {"%.2lld", 1},
    {"%.2lld", 12},
    {"%.2lld", 123},
    {"%.2lld", -1},
    {"%.2lld", -12},
    {"%.2lld", -123},
    {"%2lld", 0},
    {"%2lld", 1},
    {"%2lld", 12},
    {"%2lld", 123},
    {"%2lld", -1},
    {"%2lld", -12},
    {"%2lld", -123},
    {"%2.2lld", 0},
    {"%2.2lld", 1},
    {"%2.2lld", 12},
    {"%2.2lld", 123},
    {"%2.2lld", -1},
    {"%2.2lld", -12},
    {"%2.2lld", -123},
    {"%-lld", 0},
    {"%-lld", 1},
    {"%-lld", 12},
    {"%-lld", 123},
    {"%-lld", -1},
    {"%-lld", -12},
    {"%-lld", -123},
    {"%-.2lld", 0},
    {"%-.2lld", 1},
    {"%-.2lld", 12},
    {"%-.2lld", 123},
    {"%-.2lld", -1},
    {"%-.2lld", -12},
    {"%-.2lld", -123},
    {"%-2lld", 0},
    {"%-2lld", 1},
    {"%-2lld", 12},
    {"%-2lld", 123},
    {"%-2lld", -1},
    {"%-2lld", -12},
    {"%-2lld", -123},
    {"%-2.2lld", 0},
    {"%-2.2lld", 1},
    {"%-2.2lld", 12},
    {"%-2.2lld", 123},
    {"%-2.2lld", -1},
    {"%-2.2lld", -12},
    {"%-2.2lld", -123},
    {"%+lld", 0},
    {"%+lld", 1},
    {"%+lld", 12},
    {"%+lld", 123},
    {"%+lld", -1},
    {"%+lld", -12},
    {"%+lld", -123},
    {"%+.2lld", 0},
    {"%+.2lld", 1},
    {"%+.2lld", 12},
    {"%+.2lld", 123},
    {"%+.2lld", -1},
    {"%+.2lld", -12},
    {"%+.2lld", -123},
    {"%+2lld", 0},
    {"%+2lld", 1},
    {"%+2lld", 12},
    {"%+2lld", 123},
    {"%+2lld", -1},
    {"%+2lld", -12},
    {"%+2lld", -123},
    {"%+2.2lld", 0},
    {"%+2.2lld", 1},
    {"%+2.2lld", 12},
    {"%+2.2lld", 123},
    {"%+2.2lld", -1},
    {"%+2.2lld", -12},
    {"%+2.2lld", -123},
    {"% lld", 0},
    {"% lld", 1},
    {"% lld", 12},
    {"% lld", 123},
    {"% lld", -1},
    {"% lld", -12},
    {"% lld", -123},
    {"% .2lld", 0},
    {"% .2lld", 1},
    {"% .2lld", 12},
    {"% .2lld", 123},
    {"% .2lld", -1},
    {"% .2lld", -12},
    {"% .2lld", -123},
    {"% 2lld", 0},
    {"% 2lld", 1},
    {"% 2lld", 12},
    {"% 2lld", 123},
    {"% 2lld", -1},
    {"% 2lld", -12},
    {"% 2lld", -123},
    {"% 2.2lld", 0},
    {"% 2.2lld", 1},
    {"% 2.2lld", 12},
    {"% 2.2lld", 123},
    {"% 2.2lld", -1},
    {"% 2.2lld", -12},
    {"% 2.2lld", -123},
    {"%0lld", 0},
    {"%0lld", 1},
    {"%0lld", 12},
    {"%0lld", 123},
    {"%0lld", -1},
    {"%0lld", -12},
    {"%0lld", -123},
    {"%02lld", 0},
    {"%02lld", 1},
    {"%02lld", 12},
    {"%02lld", 123},
    {"%02lld", -1},
    {"%02lld", -12},
    {"%02lld", -123},
    {"%-+lld", 0},
    {"%-+lld", 1},
    {"%-+lld", 12},
    {"%-+lld", 123},
    {"%-+lld", -1},
    {"%-+lld", -12},
    {"%-+lld", -123},
    {"%-+.2lld", 0},
    {"%-+.2lld", 1},
    {"%-+.2lld", 12},
    {"%-+.2lld", 123},
    {"%-+.2lld", -1},
    {"%-+.2lld", -12},
    {"%-+.2lld", -123},
    {"%-+2lld", 0},
    {"%-+2lld", 1},
    {"%-+2lld", 12},
    {"%-+2lld", 123},
    {"%-+2lld", -1},
    {"%-+2lld", -12},
    {"%-+2lld", -123},
    {"%-+2.2lld", 0},
    {"%-+2.2lld", 1},
    {"%-+2.2lld", 12},
    {"%-+2.2lld", 123},
    {"%-+2.2lld", -1},
    {"%lli", 12},
    {"%lli", 123},
    {"%lli", -1},
    {"%lli", -12},
    {"%lli", -123},
    {"%.2lli", 0},
    {"%.2lli", 1},
    {"%.2lli", 12},
    {"%.2lli", 123},
    {"%.2lli", -1},
    {"%.2lli", -12},
    {"%.2lli", -123},
    {"%-+2.2lld", -12},
    {"%-+2.2lld", -123},
    {"%- lld", 0},
    {"%- lld", 1},
    {"%- lld", 12},
    {"%- lld", 123},
    {"%- lld", -1},
    {"%- lld", -12},
    {"%- lld", -123},
    {"%- .2lld", 0},
    {"%- .2lld", 1},
    {"%- .2lld", 12},
    {"%- .2lld", 123},
    {"%- .2lld", -1},
    {"%- .2lld", -12},
    {"%- .2lld", -123},
    {"%- 2lld", 0},
    {"%- 2lld", 1},
    {"%- 2lld", 12},
    {"%- 2lld", 123},
    {"%- 2lld", -1},
    {"%- 2lld", -12},
    {"%- 2lld", -123},
    {"%- 2.2lld", 0},
    {"%- 2.2lld", 1},
    {"%- 2.2lld", 12},
    {"%- 2.2lld", 123},
    {"%- 2.2lld", -1},
    {"%- 2.2lld", -12},
    {"%- 2.2lld", -123},
    {"%+0lld", 0},
    {"%+0lld", 1},
    {"%+0lld", 12},
    {"%+0lld", 123},
    {"%+0lld", -1},
    {"%+0lld", -12},
    {"%+0lld", -123},
    {"%+02lld", 0},
    {"%+02lld", 1},
    {"%+02lld", 12},
    {"%+02lld", 123},
    {"%+02lld", -1},
    {"%+02lld", -12},
    {"%+02lld", -123},
    {"% 0lld", 0},
    {"% 0lld", 1},
    {"% 0lld", 12},
    {"% 0lld", 123},
    {"% 0lld", -1},
    {"% 0lld", -12},
    {"% 0lld", -123},
    {"% 02lld", 0},
    {"% 02lld", 1},
    {"% 02lld", 12},
    {"% 02lld", 123},
    {"% 02lld", -1},
    {"% 02lld", -12},
    {"% 02lld", -123},
    {"%lli", 0},
    {"%lli", 1},
    {"%-2llo", 0},
    {"%-2llo", 1},
    {"%-2llo", 12},
    {"%-2llo", 123},
    {"%-2.2llo", 0},
    {"%-2.2llo", 1},
    {"%-2.2llo", 12},
    {"%-2.2llo", 123},
    {"%2lli", 0},
    {"%2lli", 1},
    {"%2lli", 12},
    {"%2lli", 123},
    {"%2lli", -1},
    {"%2lli", -12},
    {"%2lli", -123},
    {"%2.2lli", 0},
    {"%2.2lli", 1},
    {"%2.2lli", 12},
    {"%2.2lli", 123},
    {"%2.2lli", -1},
    {"%2.2lli", -12},
    {"%2.2lli", -123},
    {"%llu", 0},
    {"%llu", 1},
    {"%llu", 12},
    {"%llu", 123},
    {"%.2llu", 0},
    {"%.2llu", 1},
    {"%.2llu", 12},
    {"%.2llu", 123},
    {"%2llu", 0},
    {"%2llu", 1},
    {"%2llu", 12},
    {"%2llu", 123},
    {"%2.2llu", 0},
    {"%2.2llu", 1},
    {"%2.2llu", 12},
    {"%2.2llu", 123},
    {"%-llu", 0},
    {"%-llu", 1},
    {"%-llu", 12},
    {"%-llu", 123},
    {"%-.2llu", 0},
    {"%-.2llu", 1},
    {"%-.2llu", 12},
    {"%-.2llu", 123},
    {"%-2llu", 0},
    {"%-2llu", 1},
    {"%-2llu", 12},
    {"%-2llu", 123},
    {"%-2.2llu", 0},
    {"%-2.2llu", 1},
    {"%-2.2llu", 12},
    {"%-2.2llu", 123},
    {"%llo", 0},
    {"%llo", 1},
    {"%llo", 12},
    {"%llo", 123},
    {"%.2llo", 0},
    {"%.2llo", 1},
    {"%.2llo", 12},
    {"%.2llo", 123},
    {"%2llo", 0},
    {"%2llo", 1},
    {"%2llo", 12},
    {"%2llo", 123},
    {"%2.2llo", 0},
    {"%2.2llo", 1},
    {"%2.2llo", 12},
    {"%2.2llo", 123},
    {"%-llo", 0},
    {"%-llo", 1},
    {"%-llo", 12},
    {"%-llo", 123},
    {"%-.2llo", 0},
    {"%-.2llo", 1},
    {"%-.2llo", 12},
    {"%-.2llo", 123},
    {"%#llx", 0},
    {"%#llx", 1},
    {"%#llx", 12},
    {"%#llx", 123},
    {"%#.2llx", 0},
    {"%#.2llx", 1},
    {"%#.2llx", 12},
    {"%#.2llx", 123},
    {"%#2llx", 0},
    {"%#2llx", 1},
    {"%#2llx", 12},
    {"%#2llx", 123},
    {"%#2.2llx", 0},
    {"%#2.2llx", 1},
    {"%#2.2llx", 12},
    {"%#2.2llx", 123},
    {"%0llx", 0},
    {"%0llx", 1},
    {"%0llx", 12},
    {"%0llx", 123},
    {"%02llx", 0},
    {"%02llx", 1},
    {"%02llx", 12},
    {"%02llx", 123},
    {"%#0llx", 0},
    {"%#0llx", 1},
    {"%#0llx", 12},
    {"%#0llx", 123},
    {"%#llo", 0},
    {"%#llo", 1},
    {"%#llo", 12},
    {"%#llo", 123},
    {"%#.2llo", 0},
    {"%#.2llo", 1},
    {"%#.2llo", 12},
    {"%#.2llo", 123},
    {"%#2llo", 0},
    {"%#2llo", 1},
    {"%#2llo", 12},
    {"%#2llo", 123},
    {"%#2.2llo", 0},
    {"%#2.2llo", 1},
    {"%#2.2llo", 12},
    {"%#2.2llo", 123},
    {"%-#llo", 0},
    {"%-#llo", 1},
    {"%-#llo", 12},
    {"%-#llo", 123},
    {"%-#.2llo", 0},
    {"%-#.2llo", 1},
    {"%-#.2llo", 12},
    {"%-#.2llo", 123},
    {"%-#2llo", 0},
    {"%-#2llo", 1},
    {"%-#2llo", 12},
    {"%-#2llo", 123},
    {"%-#2.2llo", 0},
    {"%-#2.2llo", 1},
    {"%-#2.2llo", 12},
    {"%-#2.2llo", 123},
    {"%llx", 0},
    {"%llx", 1},
    {"%llx", 12},
    {"%llx", 123},
    {"%.2llx", 0},
    {"%.2llx", 1},
    {"%.2llx", 12},
    {"%.2llx", 123},
    {"%2llx", 0},
    {"%2llx", 1},
    {"%2llx", 12},
    {"%2llx", 123},
    {"%2.2llx", 0},
    {"%2.2llx", 1},
    {"%2.2llx", 12},
    {"%2.2llx", 123},
    {"%#02llx", 0},
    {"%#02llx", 1},
    {"%#02llx", 12},
    {"%#02llx", 123},
    {"%llX", 0},
    {"%llX", 1},
    {"%llX", 12},
    {"%llX", 123},
    {"%.2llX", 0},
    {"%.2llX", 1},
    {"%.2llX", 12},
    {"%.2llX", 123},
    {"%2llX", 0},
    {"%2llX", 1},
    {"%2llX", 12},
    {"%2llX", 123},
    {"%2.2llX", 0},
    {"%2.2llX", 1},
    {"%2.2llX", 12},
    {"%2.2llX", 123},
    {"%#llX", 0},
    {"%#llX", 1},
    {"%#llX", 12},
    {"%#llX", 123},
    {"%#.2llX", 0},
    {"%#.2llX", 1},
    {"%#.2llX", 12},
    {"%#.2llX", 123},
    {"%#2llX", 0},
    {"%#2llX", 1},
    {"%#2llX", 12},
    {"%#2llX", 123},
    {"%#2.2llX", 0},
    {"%#2.2llX", 1},
    {"%#2.2llX", 12},
    {"%#2.2llX", 123},
    {"%0llX", 0},
    {"%0llX", 1},
    {"%0llX", 12},
    {"%0llX", 123},
    {"%02llX", 0},
    {"%02llX", 1},
    {"%02llX", 12},
    {"%02llX", 123},
    {"%#0llX", 0},
    {"%#0llX", 1},
    {"%#0llX", 12},
    {"%#0llX", 123},
    {"%#02llX", 0},
    {"%#02llX", 1},
    {"%#02llX", 12},
    {"%#02llX", 123},
};
// clang-format on

TEST(StrPrintfTest, LongLongTest) {
    char dst1[20];
    char dst2[20];

    for (size_t i = 0; i < LEN(long_long_test); i++) {
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wformat-nonliteral"
        auto r1 = StrPrintf(dst1, LEN(dst1), long_long_test[i].fmt, long_long_test[i].val);
        auto r2 = snprintf(dst2, LEN(dst2), long_long_test[i].fmt, long_long_test[i].val);
#pragma GCC diagnostic pop

        EXPECT_STREQ(dst1, dst2);
        EXPECT_EQ(r1, r2);
    }
}

//! Struct for testing StrXPrintf
struct Param {
    size_t idx = 0;  //!< Index of last char added
    char buf[10];    //!< Buffer to store output
};

static size_t print_func(void* outParam, char ch) noexcept {
    auto param = reinterpret_cast<Param*>(outParam);
    if (param->idx + 1 < LEN(param->buf)) {
        param->buf[param->idx] = ch;
        param->buf[param->idx + 1] = '\0';
        param->idx++;
        return 1;
    }
    return 0;
}

TEST(StrPrintfTest, StrXPrintfTest) {
    Param param;
    auto result = StrXPrintf(print_func, &param, "%s", "Test");

    EXPECT_EQ(result, 4);
    EXPECT_STREQ(param.buf, "Test");

    Param param2;
    result = StrXPrintf(print_func, &param2, "%s", "Test to seet");

    EXPECT_EQ(result, 9);
    EXPECT_STREQ(param2.buf, "Test to s");
}

static Test<char> char_test[] = {
    {"%c", 'a'},
    {"%3c", 'a'},
};

TEST(StrPrintfTest, CharTest) {
    char dst1[20];
    char dst2[20];

    for (size_t i = 0; i < LEN(char_test); i++) {
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wformat-nonliteral"
        auto r1 = StrPrintf(dst1, LEN(dst1), char_test[i].fmt, char_test[i].val);
        auto r2 = snprintf(dst2, LEN(dst2), char_test[i].fmt, char_test[i].val);
#pragma GCC diagnostic pop

        EXPECT_STREQ(dst1, dst2);
        EXPECT_EQ(r1, r2);
    }
}

static Test<const char*> str_test[] = {
    {"%s", "Test"},
    {"%8s", "Test"},
    {"%-8s", "Test"},
    {"%.6s", "Testing to see"},
};

TEST(StrPrintfTest, StrTest) {
    char dst1[20];
    char dst2[20];

    for (size_t i = 0; i < LEN(str_test); i++) {
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wformat-nonliteral"
        auto r1 = StrPrintf(dst1, LEN(dst1), str_test[i].fmt, str_test[i].val);
        auto r2 = snprintf(dst2, LEN(dst2), str_test[i].fmt, str_test[i].val);
#pragma GCC diagnostic pop

        EXPECT_STREQ(dst1, dst2);
        EXPECT_EQ(r1, r2);
    }
}

TEST(StrXPrintf, VarWidth) {
    char dst[20];

    auto result = StrPrintf(dst, LEN(dst), "%*s", 6, "Test");

    EXPECT_EQ(result, 6);
    EXPECT_STREQ(dst, "  Test");
}

TEST(StrXPrintf, VarPrecision) {
    char dst1[20];
    char dst2[20];

    auto result1 = StrPrintf(dst1, LEN(dst1), "%.*s", 6, "Testing");
    auto result2 = snprintf(dst2, LEN(dst2), "%.*s", 6, "Testing");

    EXPECT_EQ(result1, result2);
    EXPECT_STREQ(dst1, dst2);
}

TEST(StrPrintf, BinaryFormat) {
    char dst[20];

    auto result = StrBPrintf(dst, LEN(dst), "%b", 0x13);

    EXPECT_STREQ(dst, "10011");
    EXPECT_EQ(result, 5);

    result = StrBPrintf(dst, LEN(dst), "%08b", 0x13);

    EXPECT_STREQ(dst, "00010011");
    EXPECT_EQ(result, 8);

    result = StrBPrintf(dst, LEN(dst), "%#08b", 0x13);

    EXPECT_STREQ(dst, "0b010011");
    EXPECT_EQ(result, 8);

    result = StrBPrintf(dst, LEN(dst), "%#8b", 0x13);

    EXPECT_STREQ(dst, " 0b10011");
    EXPECT_EQ(result, 8);

    result = StrBPrintf(dst, LEN(dst), "%v%v");
}

TEST(StrPrintf, TooBig) {
    char dst[10];

    auto result = StrPrintf(dst, LEN(dst), "%s", "This is a test");

    EXPECT_EQ(result, 9);
    EXPECT_STREQ(dst, "This is a");
}

TEST(StrPrintf, CoveragePrecision) {
    char dst[10];

    // This test is to exercise the controlChar being less than '0' in the following while loop:
    //      ```
    //      while (('0' <= controlChar) && (controlChar <= '9')) {
    //      ```
    // (part of the precision handling code). This test exercises that branch for coverage
    // purposes.

    auto result = StrBPrintf(dst, LEN(dst), "%.2.x", 0);

    EXPECT_EQ(result, 3);

    // This isn't the same result that snprintf produces, but the format specifier is
    // invalid, so we don't really care.
    EXPECT_STREQ(dst, "%.x");
}

TEST(StrPrintf, CoverageSpuriousTrailingPercent) {
    char dst[10];
    auto result = StrBPrintf(dst, LEN(dst), "%");
    EXPECT_EQ(result, 0);
    EXPECT_STREQ(dst, "");
}

TEST(StrPrintf, CoverageNonNumericAlternative) {
    char dst[10];
    // For %#s the # doesn't mean anything so this acts lilke %s
    auto result = StrBPrintf(dst, LEN(dst), "%#s", "foo");
    EXPECT_EQ(result, 3);
    EXPECT_STREQ(dst, "foo");
}
